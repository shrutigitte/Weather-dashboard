{"ast":null,"code":"var _jsxFileName = \"/Users/shrutigitte/Desktop/weather/weather-dashboard/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SearchBar from './components/SearchBar';\nimport WeatherDisplay from './components/WeatherDisplay';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = '1f27a35fc2844ccebe333b3be45b3463';\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const fetchCoordinates = async city => {\n    const url = `http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=${apiKey}`;\n    try {\n      const response = await axios.get(url);\n      if (response.data.length > 0) {\n        const {\n          lat,\n          lon\n        } = response.data[0];\n        return {\n          lat,\n          lon\n        };\n      } else {\n        throw new Error('Location not found');\n      }\n    } catch (error) {\n      console.error('Error fetching coordinates:', error);\n      throw error;\n    }\n  };\n  const fetchWeatherData = async (lat, lon) => {\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${apiKey}`;\n    try {\n      const response = await axios.get(url);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n      throw error;\n    }\n  };\n  const handleSearch = async city => {\n    try {\n      const {\n        lat,\n        lon\n      } = await fetchCoordinates(city);\n      const data = await fetchWeatherData(lat, lon);\n      setWeatherData(data);\n    } catch (error) {\n      setWeatherData(null);\n      alert('City not found or error fetching data.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl text-center font-bold\",\n      children: \"Weather Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(WeatherDisplay, {\n      weatherData: weatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bz3WTkv9WK5s51p29VvW+nOlOFM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SearchBar","WeatherDisplay","axios","jsxDEV","_jsxDEV","apiKey","App","_s","weatherData","setWeatherData","fetchCoordinates","city","url","response","get","data","length","lat","lon","Error","error","console","fetchWeatherData","handleSearch","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","_c","$RefreshReg$"],"sources":["/Users/shrutigitte/Desktop/weather/weather-dashboard/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SearchBar from './components/SearchBar';\nimport WeatherDisplay from './components/WeatherDisplay';\nimport axios from 'axios';\n\nconst apiKey = '1f27a35fc2844ccebe333b3be45b3463';\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState(null);\n\n  const fetchCoordinates = async (city) => {\n    const url = `http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=${apiKey}`;\n    \n    try {\n      const response = await axios.get(url);\n      if (response.data.length > 0) {\n        const { lat, lon } = response.data[0];\n        return { lat, lon };\n      } else {\n        throw new Error('Location not found');\n      }\n    } catch (error) {\n      console.error('Error fetching coordinates:', error);\n      throw error;\n    }\n  };\n\n  const fetchWeatherData = async (lat, lon) => {\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${apiKey}`;\n    \n    try {\n      const response = await axios.get(url);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n      throw error;\n    }\n  };\n\n  const handleSearch = async (city) => {\n    try {\n      const { lat, lon } = await fetchCoordinates(city);\n      const data = await fetchWeatherData(lat, lon);\n      setWeatherData(data);\n    } catch (error) {\n      setWeatherData(null);\n      alert('City not found or error fetching data.');\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-4xl text-center font-bold\">Weather Dashboard</h1>\n      <SearchBar onSearch={handleSearch} />\n      {weatherData && <WeatherDisplay weatherData={weatherData} />}\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAG,kCAAkC;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMW,gBAAgB,GAAG,MAAOC,IAAI,IAAK;IACvC,MAAMC,GAAG,GAAG,kDAAkDD,IAAI,kBAAkBN,MAAM,EAAE;IAE5F,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACF,GAAG,CAAC;MACrC,IAAIC,QAAQ,CAACE,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QAC5B,MAAM;UAAEC,GAAG;UAAEC;QAAI,CAAC,GAAGL,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;QACrC,OAAO;UAAEE,GAAG;UAAEC;QAAI,CAAC;MACrB,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;MACvC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAME,gBAAgB,GAAG,MAAAA,CAAOL,GAAG,EAAEC,GAAG,KAAK;IAC3C,MAAMN,GAAG,GAAG,uDAAuDK,GAAG,QAAQC,GAAG,uBAAuBb,MAAM,EAAE;IAEhH,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACF,GAAG,CAAC;MACrC,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOZ,IAAI,IAAK;IACnC,IAAI;MACF,MAAM;QAAEM,GAAG;QAAEC;MAAI,CAAC,GAAG,MAAMR,gBAAgB,CAACC,IAAI,CAAC;MACjD,MAAMI,IAAI,GAAG,MAAMO,gBAAgB,CAACL,GAAG,EAAEC,GAAG,CAAC;MAC7CT,cAAc,CAACM,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdX,cAAc,CAAC,IAAI,CAAC;MACpBe,KAAK,CAAC,wCAAwC,CAAC;IACjD;EACF,CAAC;EAED,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCtB,OAAA;MAAIqB,SAAS,EAAC,gCAAgC;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrE1B,OAAA,CAACJ,SAAS;MAAC+B,QAAQ,EAAER;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACpCtB,WAAW,iBAAIJ,OAAA,CAACH,cAAc;MAACO,WAAW,EAAEA;IAAY;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV;AAACvB,EAAA,CAlDQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}